'''144)	На автозаправке работают K заправочных колонок.
Некоторые машины могут заправляться только на определённых колонках,
потому что на других отсутствует нужное им топливо.
Клиент заезжает на заправку и встаёт в очередь к той колонке,
в которой есть необходимое ему топливо.
Если нужное топливо есть во всех колонках, клиент выбирает ту, очередь к которой в данный момент меньше.
Если таких колонок несколько, клиент выбирает колонку с меньшим номером. Если при этом в очереди к выбранной колонке
уже стоит 5 или более машин (считая ту машину, которая сейчас заправляется), клиент сразу уезжает. '''

with open('26data/26-144.txt') as f:
    n, k = map(int, f.readline().split())
    times = []
    for line in f.readlines():
        t0, dt, nk = map(int, line.split())
        times.append((t0, dt, nk))
times.sort()
# Создаём список из k очередей (нулевой элемент не используется)
kols = [[] for _ in range(k + 1)]
count = 0
count_k = 0
for t0, dt, nk in times:
    # удаляем из очереди тех, кто заправился к данному моменту времени
    for i in range(1, len(kols)):
        for j in range(len(kols[i]) - 1, -1, -1):
            if t0 >= kols[i][j]:
                del kols[i][j]
    # рассматриваем колонку с номером nk, если nk != 0, либо колонку с меньшей очередью
    i = nk if nk else kols.index(min(kols[1:], key=len))
    # если на выбранной колонке большая очередь, клиент уезжает
    if len(kols[i]) >= 5:
        count += 1
    else:
        # добавляем клиента в очередь;
        # если очередь пуста, прибавляем время заправки dt ко времени приезда t0,
        # иначе прибавляем время заправки dt ко времени освобождения колонки последним в очереди клиентом
        kols[i].append(max(kols[i], default=t0) + dt)
        count_k += i == k
print(count_k, count)
