'''77)	(Е. Драчева) Набор данных состоит из групп натуральных чисел, каждая группа записана в отдельной строке.
В любой группе содержится не менее двух чисел.
Из каждой группы выбрали два числа и нашли их наименьшее общее краткое (НОК).
Затем все полученные таким образом значения НОК сложили.
Определите наибольшую сумму, кратную числу 5 или 7 (но не одновременно двум этим числам), которая может быть получена таким образом.
Входные данные: Даны два входных файла: файл A (27-77a.txt) и файл B (27-77b.txt), каждый из которых содержит в первой строке количество чисел N (2 ≤ N ≤ 100000). В каждой из следующих N строк файлов записан сначала размер группы K (N <= 10), а затем – K натуральных чисел, не превышающих 500.
Пример входного файла:
4
2 8 6
3 2 7 8
2 6 5
4 7 3 8 6
Для указанных входных данных значения НОК для первой группы – 24; для второй группы – 14, 8, 56; для третьей группы – 30, для четвёртой группы – 6, 21, 24, 24, 42, 56. Значением искомой суммы должно быть число 110 (24+14+30+42).
'''
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)


def lcm(a, b):
    return a * b // gcd(a, b)


sums = [-1]*35
sums[0] = 0
with open(r'C:\Users\PC\Documents\ЕГЭ\Поляков\27data\77\27-77b.txt') as f:
    n = int(f.readline())
    for _ in range(n):
        a = [int(x) for x in f.readline().split()[1:]]
        lcms = []
        for i in range(len(a) - 1):
            for j in range(i + 1, len(a)):
                lcms.append(lcm(a[i], a[j]))
        t = [-1]*35
        for s in sums:
            if s != -1:
                for nok in lcms:
                    new_sum = s + nok
                    r = new_sum % 35
                    t[r] = max(t[r], new_sum)
        sums = t[:]
print(sums)
mx = -1000000000
for s in sums:
    if s > mx and ((s % 5 == 0) ^ (s % 7 == 0)):
        mx = s
print(mx)