'''
318)	(Д. Паршиков) Исполнитель Цепочка собирает последовательность из букв латинского алфавита,
с помощью двух команд, которым присвоены номера:
1. Добавить следующую по алфавиту букву
2. Пропустить три буквы и добавить следующую по алфавиту
Выполняя первую команду, исполнитель добавляет в конец цепочки букву,
следующую в алфавите за последней буквой текущей цепочки; выполняя вторую – добавляет букву,
стоящую в алфавите на четвёртом месте после последней буквы текущей цепочки.
Программа для такого исполнителя — это последовательность команд. Например, программа 121 преобразует «B» в «BCGH».
Сколько существует программ из пяти команд, которые преобразуют исходную цепочку «A» в цепочку,
оканчивающуюся буквой «O» и не содержащую букву «М»?
Латинский алфавит: ABCDEFGHIJKLMNOPQRSTUVWXYZ.
'''

from string import ascii_uppercase as letters

def f(s: str, k: int) -> int:
    if k == 0:
        return s[-1] == 'O'
    if s[-1] == 'M':
        return 0
    return f(s + letters[letters.index(s[-1]) + 1], k - 1) + f(s + letters[letters.index(s[-1]) + 4], k - 1)


print(f('A', 5))
